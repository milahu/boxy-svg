const E=b;(function(c,d){const D=b,f=c();while(!![]){try{const g=-parseInt(D(0x19a))/0x1+parseInt(D(0x1bf))/0x2*(parseInt(D(0x1a8))/0x3)+parseInt(D(0x1c3))/0x4+parseInt(D(0x1ae))/0x5+-parseInt(D(0x1c1))/0x6+parseInt(D(0x1a6))/0x7+-parseInt(D(0x1bd))/0x8;if(g===d)break;else f['push'](f['shift']());}catch(h){f['push'](f['shift']());}}}(a,0xba350));let e,t={'roughness':0x1,'bowing':0x1,'seed':0x64,'geometryPrecision':0x3,'hatchingType':E(0x1ba),'hatchingStroke':E(0x193),'hatchingThickness':0x1,'hatchingSpacing':0xa,'hatchingAngle':-0x29,'hatchingRepeatStrokes':!0x0,'contourStroke':'black','contourThickness':0x1,'contourDasharray':E(0x1ac),'contourDashoffset':0x0,'contourRepeatStrokes':!0x0},o={'zigzag':E(0x1b1),'grid':E(0x1b8),'straight-lines':'hachure','zigzag-lines':E(0x1a0),'dots':E(0x1a1),'dashes':'dashed','solid':E(0x198)};globalThis[E(0x1a2)](E(0x1b3),async d=>{const F=E;e||(e=(await import(F(0x1bc)))['default']);let f=e['generator'](),[j,k,m]=d[F(0x19e)];k=i(t,k);let p={'roughness':k['roughness'],'bowing':k['bowing'],'disableMultiStrokeFill':!0x1===k[F(0x1b0)],'disableMultiStroke':!0x1===k[F(0x1c2)],'fillStyle':o[k[F(0x1ab)]],'fillWeight':k[F(0x195)],'hachureGap':k[F(0x19c)],'hachureAngle':k[F(0x1a3)],'simplification':0.5,'seed':0x0===k['seed']?0x807d:k[F(0x199)],'fill':k[F(0x1a9)],'stroke':k[F(0x1b5)],'strokeWidth':k[F(0x1aa)]},q=F(0x194),v=f['path'](j,p);for(let w of v[F(0x1ad)]){let x='';for(let z of w[F(0x1b2)]){let A=z[F(0x19e)][F(0x1af)](B=>l(B,k[F(0x1bb)]));F(0x1a7)===z['op']?x+='M\x20'+A[0x0]+'\x20'+A[0x1]+'\x20':'lineTo'===z['op']?x+='L\x20'+A[0x0]+'\x20'+A[0x1]+'\x20':'bcurveTo'===z['op']&&(x+='C\x20'+A[0x0]+'\x20'+A[0x1]+'\x20'+A[0x2]+'\x20'+A[0x3]+'\x20'+A[0x4]+'\x20'+A[0x5]+'\x20');}let y={};'fillSketch'===w[F(0x1b6)]?(y['fill']=F(0x1ac),y['stroke']=k[F(0x1a9)],y[F(0x19b)]=k['hatchingThickness']+'px'):'fillPath'===w[F(0x1b6)]?y['fill']=k[F(0x1a9)]:F(0x1b4)===w['type']&&(y['fill']=F(0x1ac),y['stroke']=k[F(0x1b5)],y['stroke-width']=k[F(0x1aa)]+'px',F(0x1ac)!==k[F(0x1c4)]&&(y[F(0x1b7)]=k[F(0x1c4)]),0x0!==k['contourDashoffset']&&(y[F(0x196)]=k[F(0x1be)]+'px')),q+=F(0x19f)+x+F(0x1c0)+Object[F(0x1a4)](y)['map'](([B,C])=>B+':\x20'+C)[F(0x19d)](';\x20')+F(0x192);}q+=F(0x1b9),globalThis[F(0x197)]([q,m]);});function a(){const I=['hatchingStroke','contourThickness','hatchingType','none','sets','113075uCpLdA','map','hatchingRepeatStrokes','zigzag','ops','message','path','contourStroke','type','stroke-dasharray','cross-hatch','</g>','straight-lines','geometryPrecision','/libs/rough/rough.js','14225024PnpfhU','contourDashoffset','1495912wyVXwH','\x22\x20style=\x27','105006XcpkJd','contourRepeatStrokes','2580120JeZOBY','contourDasharray',';\x27></path>','red','<g>','hatchingThickness','stroke-dashoffset','postMessage','solid','seed','967328omQzEz','stroke-width','hatchingSpacing','join','data','<path\x20d=\x22','zigzag-line','dots','addEventListener','hatchingAngle','entries','round','9534728SMCxLj','move','6jLYpOe'];a=function(){return I;};return a();}function b(c,d){const e=a();return b=function(f,g){f=f-0x192;let h=e[f];return h;},b(c,d);}let i=(c,d)=>{const G=E;let f={};for(let [g,h]of Object[G(0x1a4)](c))f[g]=void 0x0!==d[g]?d[g]:c[g];return f;},l=(c,d=0x0)=>{const H=E;let f=Math['pow'](0xa,d);return Math[H(0x1a5)]((c+Number['EPSILON'])*f)/f;};